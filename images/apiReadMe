USE KARANA EXTENSIONS 



    Auto Close Tag
    Auto Rename Tag
    Bracket Pair Colorizer
    C#
    C# Extensions

    ES7 React/Redux/GraphQL/React-Native snippets
    GitHub Pull Requests

    HTML CSS Support
    Material Icon Theme
    Material Theme Icons
    NuGet Package Manager
    Prettier - Code formatter

    SQLite
    vscode-icons
    XML
CONNECTION EKA SQLITE 
     services.AddDbContext<DataContex>(option =>option.UseSqlite(Configuration.GetConnectionString("connection")));
    
     public DataContex(DbContextOptions opt) : base(opt)
        {
            
        }
        
        public DbSet<Value> ValuesTbl { get; set; }  //value table eka hadanne mehemai
-------------------------------------------------------------------------------------------------------------
ENTITY FRAMEWORK 
        dotnet add package Microsoft.EntityFrameworkCore.Tools.DotNet
        dotnet ef migrations add Init -p .\Persistence\ -s .\API\ 

        dotnet ef migrations remove -p .\Persistence\ -s .\API\
            -remove karana widiha

        "Microsoft.EntityFrameworkCore" 
        "Microsoft.EntityFrameworkCore.Sqlite.Core"  Persistence eke tinna one
        "Microsoft.EntityFrameworkCore.Design" eka api eke tinna one

    meken passe database eka hadaganna one migrations tibbata wadak naha.eka hinda Program.cs kiyana 
    eka edit karanna one
    
    meka kalama hambenne migrations tika witharai 

    dotnet aspnet-codegenerator controller -name ValuesController -m Value  -dc DataContex  --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries 
        -meken views tika ganna ita passe -f dala palleha tina eka use karanna ethakota api ekata adala eka enawa
    dotnet aspnet-codegenerator controller -name ValuesController -m Value  -dc DataContex  --relativeFolderPath Controllers --useDefaultLayout --referenceScriptLibraries -async -api -f  
        -meken api ekata adala controller eka labenawa
    
    tama database ekawath entity FRAMEWORK ekawath hadila naha eka hinda 

        dotnet ef database update Init -p .\Persistence.csproj -s ..\API\ 
            meke dbcontext tina eka -p kiyala folder path eka denna -s kiyala startup tiyena folder eka denna 
--------------------------------------------------------------------------------------------------------------------------
ita passe karana eka db ekak natinam entiy frame work eka use karana widiha tinne.database eka hadala naththam 
entity framework eken hadala denawa db ekak.
    eka natiwa karanna -13 vedio eka
-------------------------------------------------------------------------------------------------------
SEED DATA 
    mekedi karanne DataContex eke hardcode karala denawa code tikak.E tika thama liyanna tinne.

         protected override void  OnModelCreating(ModelBuilder builder){
            builder.Entity<Value>()
            .HasData(
                new Value{Id=1,Name="pamal"},
                new Value{Id=2,Name="sahan"},
                new Value{Id=3,Name="chamath"}
            );
        }
    
    meke OnModelCreating kiyanne dbcontext eke method ekak eka override karala thama data seed 
    karanna one hinda meka karanne.value kiyanne model eke name eka.
        dotnet ef database update 
    meka gahanna one project eka athulata gihilla.
-------------------------------------------------------------------------------------------------------
CONTROLLER EKEN DATA GANNA VIDIHA
    mithana use karanne constructor dependancy injection ekak.
-------------------------------------------------------------------------
REACT WADA KARANA WIDIHA 
    npx create-react-app client-app --use-npm --typescript
        project eka hadana widiha.
    npm start 
        project eka run karanne meken.

    
    
